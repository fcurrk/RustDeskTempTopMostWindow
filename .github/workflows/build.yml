name: build

on:
  workflow_dispatch:
    inputs:
        target:
            description: 'Target'
            required: true
            type: string
            default: 'windows-2019'
        configuration:
            description: 'Configuration'
            required: true
            type: string
            default: 'Release'
        platform:
            description: 'Platform'
            required: true
            type: string
            default: 'x64'
        target_version:
            description: 'TargetVersion'
            required: true
            type: string
            default: 'Windows10'

env:
  solution_path: TempTopMostWindow.sln

jobs:
  build:
    runs-on: ${{ inputs.target }}
    strategy:
        fail-fast: false
    env:
      dist_dir: TempTopMostWindow_${{ inputs.platform }}
      dist_file: TempTopMostWindow_${{ inputs.platform }}.zip
      build_output_dir: ${{ inputs.platform }}/${{ inputs.configuration }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build the solution
        run: |
          msbuild ${{ env.solution_path }} -p:Configuration=${{ inputs.configuration }} -p:Platform=${{ inputs.platform }} /p:TargetVersion=${{ inputs.target_version }}

      - name: Zip files
        run: |
          mkdir -p ${{ env.Dist_Dir }}
          mv ./${{ env.build_output_dir }}/Img2Mem.exe ${{ env.dist_dir }}
          mv ./${{ env.build_output_dir }}/TestApp.exe ${{ env.dist_dir }}
          mv ./${{ env.build_output_dir }}/TestAppDebug.exe ${{ env.dist_dir }}
          mv ./${{ env.build_output_dir }}/WindowInjection.dll ${{ env.dist_dir }}
          mv ./README.md ${{ env.dist_dir }}

          $msvcp140 = vswhere -latest -requires Microsoft.Component.MSBuild -find VC\Tools\**\bin\HostX64\x64\msvcp140.dll
          copy $msvcp140[-1] ${{ env.dist_dir }}
          $vcruntime140 = vswhere -latest -requires Microsoft.Component.MSBuild -find VC\Tools\**\bin\HostX64\x64\vcruntime140.dll
          copy $vcruntime140[-1] ${{ env.dist_dir }}
          $vcruntime140_1 = vswhere -latest -requires Microsoft.Component.MSBuild -find VC\Tools\**\bin\HostX64\x64\vcruntime140_1.dll
          copy $vcruntime140_1[-1] ${{ env.dist_dir }}
          $installPath = vswhere -latest -requires Microsoft.Component.MSBuild -property installationPath
          copy $installPath/Common7/IDE/ucrtbase.dll ${{ env.dist_dir }}

          Get-ChildItem ${{ env.dist_dir }} -Recurse -File | ForEach-Object {$filePath = $_.FullName; Write-Output "$($(Get-FileHash -Algorithm SHA256 -Path $filePath).Hash) $filePath" }
          Compress-Archive -Path ${{ env.dist_dir }}/* -Destination ${{ env.dist_file }}
          md5sum ${{ env.dist_file }} | tee ${{ env.dist_file }}.checksum_md5
          sha256sum ${{ env.dist_file }} | tee  ${{ env.dist_file }}.checksum_sha256

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
            name: topmostwindow-artifacts
            path: |
                ${{ env.dist_file }}
                ${{ env.dist_file }}.checksum_md5
                ${{ env.dist_file }}.checksum_sha256
